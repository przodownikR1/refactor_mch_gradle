import java.lang.annotation.Target;

apply plugin: "groovy"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'findbugs'
apply plugin: 'project-report'
apply plugin: 'pmd'
apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'build-dashboard'
apply plugin: 'codenarc'

applicationDefaultJvmArgs = ["-Dfile.encoding=UTF=8"]
libsDirName = './target'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
   mavenLocal()
   mavenCentral()
}

sourceSets {
    intTest
    main {
        java {
            srcDir 'src/main/java'
        }
        scala {
            srcDir 'src/main/scala'
        }
        resources {
            srcDir 'src/main/resources'
        }

    }
    test {
        java {
            srcDir 'src/test/java'
        }
        scala {
            srcDir 'src/test/scala'
        }
        resources {
            srcDir 'src/test/resources'
        }

    }

}
task hello {
    doLast {
        println 'Hello world!'
    }
}

task checksum (dependsOn: assemble) << {
    def files = file(libsDir).listFiles()
    files.each { File file ->
        ant.checksum(file: file, property: file.name)
        println "$file.name Checksum: ${ant.properties[file.name]}"
    }
}
task release(dependsOn: assemble) << {
    println 'We release now'
}
task upper << {
    String someString = 'mY_nAmE'
    println "Original: " + someString 
    println "Upper case: " + someString.toUpperCase()
}

task count << {
    4.times { print "$it " }
}

dependencies {
     def slf4jVersion = "1.7.5"
     def junitVersion = "4.11"
     def hamcrestVersion = "1.3"
     def mockitoVersion  = "1.9.5"
     def festAssertVersion = "1.4"
     def logbackVersion = "1.0.13"

    compile("org.slf4j:slf4j-api:$slf4jVersion")
    compile("org.slf4j:slf4j-ext:$slf4jVersion")
    compile("ch.qos.logback:logback-classic:$logbackVersion")
    compile("ch.qos.logback:logback-core:$logbackVersion")
    testCompile("org.hamcrest:hamcrest-all:$hamcrestVersion")
    testCompile("org.mockito:mockito-all:$mockitoVersion")
   
    testCompile("junit:junit:$junitVersion")
}


jar {
    baseName = 'refactorMechanismGradle'
    version =  '0.0.1'
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    manifest {
        attributes ("Implementation-Version" : 1)
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

task first (description:"first task") <<{
  println "my first task"
}

task second (dependsOn: first, description:"second task") <<{
  println "my second task"
}

task thrid (dependsOn: second, description:"thrid task") <<{
  println "my thrid task"
}


findbugsMain.reports {
    xml.enabled false
    html.enabled true
}

findbugsTest{
    enabled = false
}

findbugsTest.reports {
    xml.enabled false
    html.enabled true
}

project.tasks.test.configure {
    includes = ['**/*Test.class']
}

test {
    testLogging {
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
    }
    testLogging.showStandardStreams = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '10.1'
}

